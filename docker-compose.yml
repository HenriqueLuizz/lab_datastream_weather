version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    restart: unless-stopped
    networks:
      - stream-network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT=3
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=1
      #- KAFKA_OPTS="-Dzookeeper.4lw.commands.whitelist=* -Dzookeeper.admin.enableServer=true -Dzookeeper.standaloneEnabled=true"
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    restart: unless-stopped
    networks:
      - stream-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka:29092,OUTSIDE://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 4
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"  # externas
      - "29092:29092" # internas
    depends_on:
      - zookeeper


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    ports:
      - "8080:8080"
    networks:
      - stream-network

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    networks:
      - stream-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

  mc:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - stream-network
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/datalake;
      "

  weather_producer:
    build:
      context: .
      dockerfile: dockerfile.producer
    image: weather_stream_producer:latest
    container_name: weather_producer
    hostname: weather_producer
    depends_on:
      - kafka
      - minio
    networks:
      - stream-network
    environment:
      - KAFKA_BROKER=kafka:29092
      - TOPIC_NAME=weather_stream

  weather_consumer:
    build:
      context: .
      dockerfile: dockerfile.consumer
    image: weather_stream_consumer:latest
    container_name: weather_consumer
    hostname: weather_consumer
    depends_on:
      - kafka
      - minio
    networks:
      - stream-network
    environment:
      - KAFKA_BROKER=kafka:29092
      - MINIO_URL= http://minio:9000

networks:
  stream-network:
    driver: bridge